

MERGE INTO MAS_.TB_MAS_PROVINCE Target_ 
USING ( 
    SELECT :arg PROVINCE_SEQ, 
        :PROVINCE_ID PROVINCE_ID, :PROVINCE_ABBR PROVINCE_ABBR, 
        :PROVINCE_NAME_TH PROVINCE_NAME_TH, :PROVINCE_NAME_EN PROVINCE_NAME_EN, 
        :PROVINCE_TYPE_SEQ PROVINCE_TYPE_SEQ, 
        :PROVINCE_NOTE PROVINCE_NOTE, 
        :RECORD_STATUS RECORD_STATUS, 
        :CREATE_USER CREATE_USER, SYSDATE CREATE_DTM, 
        :CREATE_USER LAST_UPD_USER, SYSDATE LAST_UPD_DTM 
    FROM DUAL 
    WHERE 1 = 1 
) Source_ 
    ON ( Source_.PROVINCE_SEQ = Target_.PROVINCE_SEQ ) 

WHEN NOT MATCHED THEN 
    INSERT ( 
        PROVINCE_SEQ,
        PROVINCE_ID, PROVINCE_ABBR, 
        PROVINCE_NAME_TH, PROVINCE_NAME_EN, 
        PROVINCE_TYPE_SEQ, 
        PROVINCE_NOTE, 
        RECORD_STATUS, 
        CREATE_USER, CREATE_DTM--, LAST_UPD_USER, LAST_UPD_DTM 
    ) VALUES ( 
        MAS_.SQ_MAS_PROVINCE_PROVINCE_SEQ.NEXTVAL, 
        Source_.PROVINCE_ID, Source_.PROVINCE_ABBR, 
        Source_.PROVINCE_NAME_TH, Source_.PROVINCE_NAME_EN, 
        Source_.PROVINCE_TYPE_SEQ, 
        Source_.PROVINCE_NOTE, 
        Source_.RECORD_STATUS, 
        Source_.CREATE_USER, Source_.CREATE_DTM--, Source_.LAST_UPD_USER, Source_.LAST_UPD_DTM 
    ) 

WHEN MATCHED THEN 
    UPDATE SET 
        -- Target_.PROVINCE_SEQ = Source_.PROVINCE_SEQ, 
        Target_.PROVINCE_ID = Source_.PROVINCE_ID, Target_.PROVINCE_ABBR = Source_.PROVINCE_ABBR, 
        Target_.PROVINCE_NAME_TH = Source_.PROVINCE_NAME_TH, Target_.PROVINCE_NAME_EN = Source_.PROVINCE_NAME_EN, 
        Target_.PROVINCE_TYPE_SEQ = Source_.PROVINCE_TYPE_SEQ, 
        Target_.PROVINCE_NOTE = Source_.PROVINCE_NOTE, 
        Target_.RECORD_STATUS = Source_.RECORD_STATUS, 
        -- Target_.CREATE_USER = Source_.CREATE_USER, Target_.CREATE_DTM = Source_.CREATE_DTM, 
        Target_.LAST_UPD_USER = Source_.LAST_UPD_USER,  Target_.LAST_UPD_DTM = Source_.LAST_UPD_DTM 


